# Python stubs generated by omniidl from StartGameService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "StartGameService"
#
__name__ = "StartGameService"
_0_StartGameService = omniORB.openModule("StartGameService", r"StartGameService.idl")
_0_StartGameService__POA = omniORB.openModule("StartGameService__POA", r"StartGameService.idl")


# interface StartGame
_0_StartGameService._d_StartGame = (omniORB.tcInternal.tv_objref, "IDL:StartGameService/StartGame:1.0", "StartGame")
omniORB.typeMapping["IDL:StartGameService/StartGame:1.0"] = _0_StartGameService._d_StartGame
_0_StartGameService.StartGame = omniORB.newEmptyClass()
class StartGame :
    _NP_RepositoryId = _0_StartGameService._d_StartGame[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_StartGameService.StartGame = StartGame
_0_StartGameService._tc_StartGame = omniORB.tcInternal.createTypeCode(_0_StartGameService._d_StartGame)
omniORB.registerType(StartGame._NP_RepositoryId, _0_StartGameService._d_StartGame, _0_StartGameService._tc_StartGame)

# StartGame operations and attributes
StartGame._d_checkGameExist = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), None)
StartGame._d_createGame = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), None)
StartGame._d_joinGame = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), None)
StartGame._d_get_user_list = ((), ((omniORB.tcInternal.tv_string,0), ), None)
StartGame._d_get_remaining_time = ((), (omniORB.tcInternal.tv_long, ), None)
StartGame._d_cancelGame = (((omniORB.tcInternal.tv_string,0), ), (), None)
StartGame._d_setCancelGame = (((omniORB.tcInternal.tv_string,0), ), (), None)
StartGame._d_getGameID = ((), (omniORB.tcInternal.tv_long, ), None)

# StartGame object reference
class _objref_StartGame (CORBA.Object):
    _NP_RepositoryId = StartGame._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def checkGameExist(self, *args):
        return self._obj.invoke("checkGameExist", _0_StartGameService.StartGame._d_checkGameExist, args)

    def createGame(self, *args):
        return self._obj.invoke("createGame", _0_StartGameService.StartGame._d_createGame, args)

    def joinGame(self, *args):
        return self._obj.invoke("joinGame", _0_StartGameService.StartGame._d_joinGame, args)

    def get_user_list(self, *args):
        return self._obj.invoke("get_user_list", _0_StartGameService.StartGame._d_get_user_list, args)

    def get_remaining_time(self, *args):
        return self._obj.invoke("get_remaining_time", _0_StartGameService.StartGame._d_get_remaining_time, args)

    def cancelGame(self, *args):
        return self._obj.invoke("cancelGame", _0_StartGameService.StartGame._d_cancelGame, args)

    def setCancelGame(self, *args):
        return self._obj.invoke("setCancelGame", _0_StartGameService.StartGame._d_setCancelGame, args)

    def getGameID(self, *args):
        return self._obj.invoke("getGameID", _0_StartGameService.StartGame._d_getGameID, args)

omniORB.registerObjref(StartGame._NP_RepositoryId, _objref_StartGame)
_0_StartGameService._objref_StartGame = _objref_StartGame
del StartGame, _objref_StartGame

# StartGame skeleton
__name__ = "StartGameService__POA"
class StartGame (PortableServer.Servant):
    _NP_RepositoryId = _0_StartGameService.StartGame._NP_RepositoryId


    _omni_op_d = {"checkGameExist": _0_StartGameService.StartGame._d_checkGameExist, "createGame": _0_StartGameService.StartGame._d_createGame, "joinGame": _0_StartGameService.StartGame._d_joinGame, "get_user_list": _0_StartGameService.StartGame._d_get_user_list, "get_remaining_time": _0_StartGameService.StartGame._d_get_remaining_time, "cancelGame": _0_StartGameService.StartGame._d_cancelGame, "setCancelGame": _0_StartGameService.StartGame._d_setCancelGame, "getGameID": _0_StartGameService.StartGame._d_getGameID}

StartGame._omni_skeleton = StartGame
_0_StartGameService__POA.StartGame = StartGame
omniORB.registerSkeleton(StartGame._NP_RepositoryId, StartGame)

__name__ = "StartGameService"

#
# End of module "StartGameService"
#
__name__ = "StartGameService_idl"

_exported_modules = ( "StartGameService", )

# The end.
