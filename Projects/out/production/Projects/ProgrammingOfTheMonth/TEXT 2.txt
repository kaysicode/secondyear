"And what, Telemachus, has led you to take this long sea voyage to
Lacedaemon? Are you on public or private business? Tell me all about
it."
"I have come, sir replied Telemachus, "to see if you can tell me
anything about my father. I am being eaten out of house and home; my
fair estate is being wasted, and my house is full of miscreants who
keep killing great numbers of my sheep and oxen, on the pretence of
paying their addresses to my mother. Therefore, I am suppliant at your
knees if haply you may tell me about my father's melancholy end,
whether you saw it with your own eyes, or heard it from some other
traveller; for he was a man born to trouble. Do not soften things
out of any pity for myself, but tell me in all plainness exactly
what you saw. If my brave father Ulysses ever did you loyal service
either by word or deed, when you Achaeans were harassed by the
Trojans, bear it in mind now as in my favour and tell me truly all."
Menelaus on hearing this was very much shocked. "So," he
exclaimed, "these cowards would usurp a brave man's bed? A hind
might as well lay her new born young in the lair of a lion, and then
go off to feed in the forest or in some grassy dell: the lion when
he comes back to his lair will make short work with the pair of
them- and so will Ulysses with these suitors. By father Jove, Minerva,
and Apollo, if Ulysses is still the man that he was when he wrestled
with Philomeleides in Lesbos, and threw him so heavily that all the
Achaeans cheered him- if he is still such and were to come near
these suitors, they would have a short shrift and a sorry wedding.
As regards your questions, however, I will not prevaricate nor deceive
you, but will tell you without concealment all that the old man of the
sea told me.
"I was trying to come on here, but the gods detained me in Egypt,
for my hecatombs had not given them full satisfaction, and the gods
are very strict about having their dues. Now off Egypt, about as far
as a ship can sail in a day with a good stiff breeze behind her, there
is an island called Pharos- it has a good harbour from which vessels
can get out into open sea when they have taken in water- and the
gods becalmed me twenty days without so much as a breath of fair
wind to help me forward. We should have run clean out of provisions
and my men would have starved, if a goddess had not taken pity upon me
and saved me in the person of Idothea, daughter to Proteus, the old
man of the sea, for she had taken a great fancy to me.
"She came to me one day when I was by myself, as I often was, for
the men used to go with their barbed hooks, all over the island in the
hope of catching a fish or two to save them from the pangs of
hunger. 'Stranger,' said she, 'it seems to me that you like starving
in this way- at any rate it does not greatly trouble you, for you
stick here day after day, without even trying to get away though
your men are dying by inches.'
"'Let me tell you,' said I, 'whichever of the goddesses you may
happen to be, that I am not staying here of my own accord, but must
have offended the gods that live in heaven. Tell me, therefore, for
the gods know everything. which of the immortals it is that is
hindering me in this way, and tell me also how I may sail the sea so
as to reach my home.'
"'Stranger,' replied she, 'I will make it all quite clear to you.
There is an old immortal who lives under the sea hereabouts and
whose name is Proteus. He is an Egyptian, and people say he is my
father; he is Neptune's head man and knows every inch of ground all
over the bottom of the sea. If you can snare him and hold him tight,
he will tell you about your voyage, what courses you are to take,
and how you are to sail the sea so as to reach your home. He will also
tell you, if you so will, all that has been going on at your house
both good and bad, while you have been away on your long and dangerous
journey.'
"'Can you show me,' said I, 'some stratagem by means of which I
may catch this old god without his suspecting it and finding me out?
For a god is not easily caught- not by a mortal man.'
"'Stranger,' said she, 'I will make it all quite clear to you. About
the time when the sun shall have reached mid heaven, the old man of
the sea comes up from under the waves, heralded by the West wind
that furs the water over his head. As soon as he has come up he lies
down, and goes to sleep in a great sea cave, where the seals-
Halosydne's chickens as they call them- come up also from the grey
sea, and go to sleep in shoals all round him; and a very strong and
fish-like smell do they bring with them. Early to-morrow morning I
will take you to this place and will lay you in ambush. Pick out,
therefore, the three best men you have in your fleet, and I will
tell you all the tricks that the old man will play you.
"'First he will look over all his seals, and count them; then,
when he has seen them and tallied them on his five fingers, he will go
to sleep among them, as a shepherd among his sheep. The moment you see
that he is asleep seize him; put forth all your strength and hold
him fast, for he will do his very utmost to get away from you. He will
turn himself into every kind of creature that goes upon the earth, and
will become also both fire and water; but you must hold him fast and
grip him tighter and tighter, till he begins to talk to you and
comes back to what he was when you saw him go to sleep; then you may
slacken your hold and let him go; and you can ask him which of the
gods it is that is angry with you, and what you must do to reach
your home over the seas.'
"Having so said she dived under the waves, whereon I turned back
to the place where my ships were ranged upon the shore; and my heart
was clouded with care as I went along. When I reached my ship we got
supper ready, for night was falling, and camped down upon the beach.
"When the child of morning, rosy-fingered Dawn, appeared, I took the
three men on whose prowess of all kinds I could most rely, and went
along by the sea-side, praying heartily to heaven. Meanwhile the
goddess fetched me up four seal skins from the bottom of the sea,
all of them just skinned, for she meant playing a trick upon her
father. Then she dug four pits for us to lie in, and sat down to
wait till we should come up. When we were close to her, she made us
lie down in the pits one after the other, and threw a seal skin over
each of us. Our ambuscade would have been intolerable, for the
stench of the fishy seals was most distressing- who would go to bed
with a sea monster if he could help it?-but here, too, the goddess
helped us, and thought of something that gave us great relief, for she
put some ambrosia under each man's nostrils, which was so fragrant
that it killed the smell of the seals.
"We waited the whole morning and made the best of it, watching the
seals come up in hundreds to bask upon the sea shore, till at noon the
old man of the sea came up too, and when he had found his fat seals he
went over them and counted them. We were among the first he counted,
and he never suspected any guile, but laid himself down to sleep as
soon as he had done counting. Then we rushed upon him with a shout and
seized him; on which he began at once with his old tricks, and changed
himself first into a lion with a great mane; then all of a sudden he
became a dragon, a leopard, a wild boar; the next moment he was
running water, and then again directly he was a tree, but we stuck
to him and never lost hold, till at last the cunning old creature
became distressed, and said, Which of the gods was it, Son of
Atreus, that hatched this plot with you for snaring me and seizing
me against my will? What do you want?'
"'You know that yourself, old man,' I answered, 'you will gain
nothing by trying to put me off. It is because I have been kept so
long in this island, and see no sign of my being able to get away. I
am losing all heart; tell me, then, for you gods know everything,
which of the immortals it is that is hindering me, and tell me also
how I may sail the sea so as to reach my home?'
"Then,' he said, 'if you would finish your voyage and get home
quickly, you must offer sacrifices to Jove and to the rest of the gods
before embarking; for it is decreed that you shall not get back to
your friends, and to your own house, till you have returned to the
heaven fed stream of Egypt, and offered holy hecatombs to the immortal
gods that reign in heaven. When you have done this they will let you
finish your voyage.'
"I was broken hearted when I heard that I must go back all that long
and terrible voyage to Egypt; nevertheless, I answered, 'I will do
all, old man, that you have laid upon me; but now tell me, and tell me
true, whether all the Achaeans whom Nestor and I left behind us when
we set sail from Troy have got home safely, or whether any one of them
came to a bad end either on board his own ship or among his friends
when the days of his fighting were done.'
"'Son of Atreus,' he answered, 'why ask me? You had better not
know what I can tell you, for your eyes will surely fill when you have
heard my story. Many of those about whom you ask are dead and gone,
but many still remain, and only two of the chief men among the
Achaeans perished during their return home. As for what happened on
the field of battle- you were there yourself. A third Achaean leader
is still at sea, alive, but hindered from returning. Ajax was wrecked,
for Neptune drove him on to the great rocks of Gyrae; nevertheless, he
let him get safe out of the water, and in spite of all Minerva's
hatred he would have escaped death, if he had not ruined himself by
boasting. He said the gods could not drown him even though they had
tried to do so, and when Neptune heard this large talk, he seized
his trident in his two brawny hands, and split the rock of Gyrae in
two pieces. The base remained where it was, but the part on which Ajax
was sitting fell headlong into the sea and carried Ajax with it; so he
drank salt water and was drowned.
"'Your brother and his ships escaped, for Juno protected him, but
when he was just about to reach the high promontory of Malea, he was
caught by a heavy gale which carried him out to sea again sorely
against his will, and drove him to the foreland where Thyestes used to
dwell, but where Aegisthus was then living. By and by, however, it
seemed as though he was to return safely after all, for the gods
backed the wind into its old quarter and they reached home; whereon
Agamemnon kissed his native soil, and shed tears of joy at finding
himself in his own country.
"'Now there was a watchman whom Aegisthus kept always on the
watch, and to whom he had promised two talents of gold. This man had
been looking out for a whole year to make sure that Agamemnon did
not give him the slip and prepare war; when, therefore, this man saw
Agamemnon go by, he went and told Aegisthus who at once began to lay a
plot for him. He picked twenty of his bravest warriors and placed them
in ambuscade on one side the cloister, while on the opposite side he
prepared a banquet. Then he sent his chariots and horsemen to
Agamemnon, and invited him to the feast, but he meant foul play. He
got him there, all unsuspicious of the doom that was awaiting him, and
killed him when the banquet was over as though he were butchering an
ox in the shambles; not one of Agamemnon's followers was left alive,
nor yet one of Aegisthus', but they were all killed there in the
cloisters.'
"Thus spoke Proteus, and I was broken hearted as I heard him. I
sat down upon the sands and wept; I felt as though I could no longer
bear to live nor look upon the light of the sun. Presently, when I had
had my fill of weeping and writhing upon the ground, the old man of
the sea said, 'Son of Atreus, do not waste any more time in crying
so bitterly; it can do no manner of good; find your way home as fast
as ever you can, for Aegisthus be still alive, and even though Orestes
has beforehand with you in kilting him, you may yet come in for his
funeral.'
"On this I took comfort in spite of all my sorrow, and said, 'I
know, then, about these two; tell me, therefore, about the third man
of whom you spoke; is he still alive, but at sea, and unable to get
home? or is he dead? Tell me, no matter how much it may grieve me.'
"'The third man,' he answered, 'is Ulysses who dwells in Ithaca. I
can see him in an island sorrowing bitterly in the house of the
nymph Calypso, who is keeping him prisoner, and he cannot reach his
home for he has no ships nor sailors to take him over the sea. As
for your own end, Menelaus, you shall not die in Argos, but the gods
will take you to the Elysian plain, which is at the ends of the world.
There fair-haired Rhadamanthus reigns, and men lead an easier life
than any where else in the world, for in Elysium there falls not rain,
nor hail, nor snow, but Oceanus breathes ever with a West wind that
sings softly from the sea, and gives fresh life to all men. This
will happen to you because you have married Helen, and are Jove's
son-in-law.'
"As he spoke he dived under the waves, whereon I turned back to
the ships with my companions, and my heart was clouded with care as
I went along. When we reached the ships we got supper ready, for night
was falling, and camped down upon the beach. When the child of
morning, rosy-fingered Dawn appeared, we drew our ships into the
water, and put our masts and sails within them; then we went on
board ourselves, took our seats on the benches, and smote the grey sea
with our oars. I again stationed my ships in the heaven-fed stream
of Egypt, and offered hecatombs that were full and sufficient. When
I had thus appeased heaven's anger, I raised a barrow to the memory of
Agamemnon that his name might live for ever, after which I had a quick
passage home, for the gods sent me a fair wind.
"And now for yourself- stay here some ten or twelve days longer, and
I will then speed you on your way. I will make you a noble present
of a chariot and three horses. I will also give you a beautiful
chalice that so long as you live you may think of me whenever you make
a drink-offering to the immortal gods."
"Son of Atreus," replied Telemachus, "do not press me to stay
longer; I should be contented to remain with you for another twelve
months; I find your conversation so delightful that I should never
once wish myself at home with my parents; but my crew whom I have left
at Pylos are already impatient, and you are detaining me from them. As
for any present you may be disposed to make me, I had rather that it
should he a piece of plate. I will take no horses back with me to
Ithaca, but will leave them to adorn your own stables, for you have
much flat ground in your kingdom where lotus thrives, as also
meadowsweet and wheat and barley, and oats with their white and
spreading ears; whereas in Ithaca we have neither open fields nor
racecourses, and the country is more fit for goats than horses, and
I like it the better for that. None of our islands have much level
ground, suitable for horses, and Ithaca least of all."
Menelaus smiled and took Telemachus's hand within his own. "What you
say," said he, "shows that you come of good family. I both can, and
will, make this exchange for you, by giving you the finest and most
precious piece of plate in all my house. It is a mixing-bowl by
Vulcan's own hand, of pure silver, except the rim, which is inlaid
with gold. Phaedimus, king of the Sidonians, gave it me in the
course of a visit which I paid him when I returned thither on my
homeward journey. I will make you a present of it."
Thus did they converse [and guests kept coming to the king's
house. They brought sheep and wine, while their wives had put up bread
for them to take with them; so they were busy cooking their dinners in
the courts].
Meanwhile the suitors were throwing discs or aiming with spears at a
mark on the levelled ground in front of Ulysses' house, and were
behaving with all their old insolence. Antinous and Eurymachus, who
were their ringleaders and much the foremost among them all, were
sitting together when Noemon son of Phronius came up and said to
Antinous,
"Have we any idea, Antinous, on what day Telemachus returns from
Pylos? He has a ship of mine, and I want it, to cross over to Elis:
I have twelve brood mares there with yearling mule foals by their side
not yet broken in, and I want to bring one of them over here and break
him."
They were astounded when they heard this, for they had made sure
that Telemachus had not gone to the city of Neleus. They thought he
was only away somewhere on the farms, and was with the sheep, or
with the swineherd; so Antinous said, "When did he go? Tell me
truly, and what young men did he take with him? Were they freemen or
his own bondsmen- for he might manage that too? Tell me also, did
you let him have the ship of your own free will because he asked
you, or did he take it without yourleave?"
"I lent it him," answered Noemon, "what else could I do when a man
of his position said he was in a difficulty, and asked me to oblige
him? I could not possibly refuse. As for those who went with him
they were the best young men we have, and I saw Mentor go on board
as captain- or some god who was exactly like him. I cannot
understand it, for I saw Mentor here myself yesterday morning, and yet
he was then setting out for Pylos."
Noemon then went back to his father's house, but Antinous and
Eurymachus were very angry. They told the others to leave off playing,
and to come and sit down along with themselves. When they came,
Antinous son of Eupeithes spoke in anger. His heart was black with
rage, and his eyes flashed fire as he said:
"Good heavens, this voyage of Telemachus is a very serious matter;
we had made sure that it would come to nothing, but the young fellow
has got away in spite of us, and with a picked crew too. He will be
giving us trouble presently; may Jove take him before he is full
grown. Find me a ship, therefore, with a crew of twenty men, and I
will lie in wait for him in the straits between Ithaca and Samos; he
will then rue the day that he set out to try and get news of his
father."
Thus did he speak, and the others applauded his saying; they then
all of them went inside the buildings.
It was not long ere Penelope came to know what the suitors were
plotting; for a man servant, Medon, overheard them from outside the
outer court as they were laying their schemes within, and went to tell
his mistress. As he crossed the threshold of her room Penelope said:
"Medon, what have the suitors sent you here for? Is it to tell the
maids to leave their master's business and cook dinner for them? I
wish they may neither woo nor dine henceforward, neither here nor
anywhere else, but let this be the very last time, for the waste you
all make of my son's estate. Did not your fathers tell you when you
were children how good Ulysses had been to them- never doing
anything high-handed, nor speaking harshly to anybody? Kings may say
things sometimes, and they may take a fancy to one man and dislike
another, but Ulysses never did an unjust thing by anybody- which shows
what bad hearts you have, and that there is no such thing as gratitude
left in this world."
Then Medon said, "I wish, Madam, that this were all; but they are
plotting something much more dreadful now- may heaven frustrate
their design. They are going to try and murder Telemachus as he is
coming home from Pylos and Lacedaemon, where he has been to get news
of his father."
Then Penelope's heart sank within her, and for a long time she was
speechless; her eyes filled with tears, and she could find no
utterance. At last, however, she said, "Why did my son leave me?
What business had he to go sailing off in ships that make long voyages
over the ocean like sea-horses? Does he want to die without leaving
any one behind him to keep up his name?"
"I do not know," answered Medon, "whether some god set him on to it,
or whether he went on his own impulse to see if he could find out if
his father was dead, or alive and on his way home."
Then he went downstairs again, leaving Penelope in an agony of
grief. There were plenty of seats in the house, but she. had no
heart for sitting on any one of them; she could only fling herself
on the floor of her own room and cry; whereon all the maids in the
house, both old and young, gathered round her and began to cry too,
till at last in a transport of sorrow she exclaimed,
"My dears, heaven has been pleased to try me with more affliction
than any other woman of my age and country. First I lost my brave
and lion-hearted husband, who had every good quality under heaven, and
whose name was great over all Hellas and middle Argos, and now my
darling son is at the mercy of the winds and waves, without my
having heard one word about his leaving home. You hussies, there was
not one of you would so much as think of giving me a call out of my
bed, though you all of you very well knew when he was starting. If I
had known he meant taking this voyage, he would have had to give it
up, no matter how much he was bent upon it, or leave me a corpse
behind him- one or other. Now, however, go some of you and call old
Dolius, who was given me by my father on my marriage, and who is my
gardener. Bid him go at once and tell everything to Laertes, who may
be able to hit on some plan for enlisting public sympathy on our side,
as against those who are trying to exterminate his own race and that
of Ulysses."
Then the dear old nurse Euryclea said, "You may kill me, Madam, or
let me live on in your house, whichever you please, but I will tell
you the real truth. I knew all about it, and gave him everything he
wanted in the way of bread and wine, but he made me take my solemn
oath that I would not tell you anything for some ten or twelve days,
unless you asked or happened to hear of his having gone, for he did
not want you to spoil your beauty by crying. And now, Madam, wash your
face, change your dress, and go upstairs with your maids to offer
prayers to Minerva, daughter of Aegis-bearing Jove, for she can save
him even though he be in the jaws of death. Do not trouble Laertes: he
has trouble enough already. Besides, I cannot think that the gods hate
die race of the race of the son of Arceisius so much, but there will
be a son left to come up after him, and inherit both the house and the
fair fields that lie far all round it."
With these words she made her mistress leave off crying, and dried
the tears from her eyes. Penelope washed her face, changed her
dress, and went upstairs with her maids. She then put some bruised
barley into a basket and began praying to Minerva.
"Hear me," she cried, "Daughter of Aegis-bearing Jove,
unweariable. If ever Ulysses while he was here burned you fat thigh
bones of sheep or heifer, bear it in mind now as in my favour, and
save my darling son from the villainy of the suitors."
She cried aloud as she spoke, and the goddess heard her prayer;
meanwhile the suitors were clamorous throughout the covered
cloister, and one of them said:
"The queen is preparing for her marriage with one or other of us.
Little does she dream that her son has now been doomed to die."
This was what they said, but they did not know what was going to
happen. Then Antinous said, "Comrades, let there be no loud talking,
lest some of it get carried inside. Let us be up and do that in
silence, about which we are all of a mind."
He then chose twenty men, and they went down to their. ship and to
the sea side; they drew the vessel into the water and got her mast and
sails inside her; they bound the oars to the thole-pins with twisted
thongs of leather, all in due course, and spread the white sails
aloft, while their fine servants brought them their armour. Then
they made the ship fast a little way out, came on shore again, got
their suppers, and waited till night should fall.
But Penelope lay in her own room upstairs unable to eat or drink,
and wondering whether her brave son would escape, or be overpowered by
the wicked suitors. Like a lioness caught in the toils with huntsmen
hemming her in on every side she thought and thought till she sank
into a slumber, and lay on her bed bereft of thought and motion.
Then Minerva bethought her of another matter, and made a vision in
the likeness of Penelope's sister Iphthime daughter of Icarius who had
married Eumelus and lived in Pherae. She told the vision to go to
the house of Ulysses, and to make Penelope leave off crying, so it
came into her room by the hole through which the thong went for
pulling the door to, and hovered over her head, saying,
"You are asleep, Penelope: the gods who live at ease will not suffer
you to weep and be so sad. Your son has done them no wrong, so he will
yet come back to you."
Penelope, who was sleeping sweetly at the gates of dreamland,
answered, "Sister, why have you come here? You do not come very often,
but I suppose that is because you live such a long way off. Am I,
then, to leave off crying and refrain from all the sad thoughts that
torture me? I, who have lost my brave and lion-hearted husband, who
had every good quality under heaven, and whose name was great over all
Hellas and middle Argos; and now my darling son has gone off on
board of a ship- a foolish fellow who has never been used to
roughing it, nor to going about among gatherings of men. I am even
more anxious about him than about my husband; I am all in a tremble
when I think of him, lest something should happen to him, either
from the people among whom he has gone, or by sea, for he has many
enemies who are plotting against him, and are bent on killing him
before he can return home."
Then the vision said, "Take heart, and be not so much dismayed.
There is one gone with him whom many a man would be glad enough to
have stand by his side, I mean Minerva; it is she who has compassion
upon you, and who has sent me to bear you this message."
"Then," said Penelope, "if you are a god or have been sent here by
divine commission, tell me also about that other unhappy one- is he
still alive, or is he already dead and in the house of Hades?"
And the vision said, "I shall not tell you for certain whether he is
alive or dead, and there is no use in idle conversation."
Then it vanished through the thong-hole of the door and was
dissipated into thin air; but Penelope rose from her sleep refreshed
and comforted, so vivid had been her dream.
Meantime the suitors went on board and sailed their ways over the
sea, intent on murdering Telemachus. Now there is a rocky islet called
Asteris, of no great size, in mid channel between Ithaca and Samos,
and there is a harbour on either side of it where a ship can lie. Here
then the Achaeans placed themselves in ambush.
BOOK V

And now, as Dawn rose from her couch beside Tithonus- harbinger of
light alike to mortals and immortals- the gods met in council and with
them, Jove the lord of thunder, who is their king. Thereon Minerva
began to tell them of the many sufferings of Ulysses, for she pitied
him away there in the house of the nymph Calypso.
"Father Jove," said she, "and all you other gods that live in
everlasting bliss, I hope there may never be such a thing as a kind
and well-disposed ruler any more, nor one who will govern equitably. I
hope they will be all henceforth cruel and unjust, for there is not
one of his subjects but has forgotten Ulysses, who ruled them as
though he were their father. There he is, lying in great pain in an
island where dwells the nymph Calypso, who will not let him go; and he
cannot get back to his own country, for he can find neither ships
nor sailors to take him over the sea. Furthermore, wicked people are
now trying to murder his only son Telemachus, who is coming home
from Pylos and Lacedaemon, where he has been to see if he can get news
of his father."
"What, my dear, are you talking about?" replied her father, "did you
not send him there yourself, because you thought it would help Ulysses
to get home and punish the suitors? Besides, you are perfectly able to
protect Telemachus, and to see him safely home again, while the
suitors have to come hurry-skurrying back without having killed him."
When he had thus spoken, he said to his son Mercury, "Mercury, you
are our messenger, go therefore and tell Calypso we have decreed
that poor Ulysses is to return home. He is to be convoyed neither by
gods nor men, but after a perilous voyage of twenty days upon a raft
he is to reach fertile Scheria, the land of the Phaeacians, who are
near of kin to the gods, and will honour him as though he were one
of ourselves. They will send him in a ship to his own country, and
will give him more bronze and gold and raiment than he would have
brought back from Troy, if he had had had all his prize money and
had got home without disaster. This is how we have settled that he
shall return to his country and his friends."
Thus he spoke, and Mercury, guide and guardian, slayer of Argus, did
as he was told. Forthwith he bound on his glittering golden sandals
with which he could fly like the wind over land and sea. He took the
wand with which he seals men's eyes in sleep or wakes them just as
he pleases, and flew holding it in his hand over Pieria; then he
swooped down through the firmament till he reached the level of the
sea, whose waves he skimmed like a cormorant that flies fishing
every hole and corner of the ocean, and drenching its thick plumage in
the spray. He flew and flew over many a weary wave, but when at last
he got to the island which was his journey's end, he left the sea
and went on by land till he came to the cave where the nymph Calypso
lived.
He found her at home. There was a large fire burning on the
hearth, and one could smell from far the fragrant reek of burning
cedar and sandal wood. As for herself, she was busy at her loom,
shooting her golden shuttle through the warp and singing
beautifully. Round her cave there was a thick wood of alder, poplar,
and sweet smelling cypress trees, wherein all kinds of great birds had
built their nests- owls, hawks, and chattering sea-crows that occupy
their business in the waters. A vine loaded with grapes was trained
and grew luxuriantly about the mouth of the cave; there were also four
running rills of water in channels cut pretty close together, and
turned hither and thither so as to irrigate the beds of violets and
luscious herbage over which they flowed. Even a god could not help
being charmed with such a lovely spot, so Mercury stood still and
looked at it; but when he had admired it sufficiently he went inside
the cave.
Calypso knew him at once- for the gods all know each other, no
matter how far they live from one another- but Ulysses was not within;
he was on the sea-shore as usual, looking out upon the barren ocean
with tears in his eyes, groaning and breaking his heart for sorrow.
Calypso gave Mercury a seat and said: "Why have you come to see me,
Mercury- honoured, and ever welcome- for you do not visit me often?
Say what you want; I will do it for be you at once if I can, and if it
can be done at all; but come inside, and let me set refreshment before
you.
As she spoke she drew a table loaded with ambrosia beside him and
mixed him some red nectar, so Mercury ate and drank till he had had
enough, and then said:
"We are speaking god and goddess to one another, one another, and
you ask me why I have come here, and I will tell you truly as you
would have me do. Jove sent me; it was no doing of mine; who could
possibly want to come all this way over the sea where there are no
cities full of people to offer me sacrifices or choice hecatombs?
Nevertheless I had to come, for none of us other gods can cross
Jove, nor transgress his orders. He says that you have here the most
ill-starred of alf those who fought nine years before the city of King
Priam and sailed home in the tenth year after having sacked it. On
their way home they sinned against Minerva, who raised both wind and
waves against them, so that all his brave companions perished, and
he alone was carried hither by wind and tide. Jove says that you are
to let this by man go at once, for it is decreed that he shall not
perish here, far from his own people, but shall return to his house
and country and see his friends again."
Calypso trembled with rage when she heard this, "You gods," she
exclaimed, to be ashamed of yourselves. You are always jealous and
hate seeing a goddess take a fancy to a mortal man, and live with
him in open matrimony. So when rosy-fingered Dawn made love to
Orion, you precious gods were all of you furious till Diana went and
killed him in Ortygia. So again when Ceres fell in love with Iasion,
and yielded to him in a thrice ploughed fallow field, Jove came to
hear of it before so long and killed Iasion with his thunder-bolts.
And now you are angry with me too because I have a man here. I found
the poor creature sitting all alone astride of a keel, for Jove had
struck his ship with lightning and sunk it in mid ocean, so that all
his crew were drowned, while he himself was driven by wind and waves
on to my island. I got fond of him and cherished him, and had set my
heart on making him immortal, so that he should never grow old all his
days; still I cannot cross Jove, nor bring his counsels to nothing;
therefore, if he insists upon it, let the man go beyond the seas
again; but I cannot send him anywhere myself for I have neither
ships nor men who can take him. Nevertheless I will readily give him
such advice, in all good faith, as will be likely to bring him
safely to his own country."
"Then send him away," said Mercury, "or Jove will be angry with
you and punish you"'
On this he took his leave, and Calypso went out to look for Ulysses,
for she had heard Jove's message. She found him sitting upon the beach
with his eyes ever filled with tears, and dying of sheer
home-sickness; for he had got tired of Calypso, and though he was
forced to sleep with her in the cave by night, it was she, not he,
that would have it so. As for the day time, he spent it on the rocks
and on the sea-shore, weeping, crying aloud for his despair, and
always looking out upon the sea. Calypso then went close up to him
said:
"My poor fellow, you shall not stay here grieving and fretting
your life out any longer. I am going to send you away of my own free
will; so go, cut some beams of wood, and make yourself a large raft
with an upper deck that it may carry you safely over the sea. I will
put bread, wine, and water on board to save you from starving. I
will also give you clothes, and will send you a fair wind to take
you home, if the gods in heaven so will it- for they know more about
these things, and can settle them better than I can."
Ulysses shuddered as he heard her. "Now goddess," he answered,
"there is something behind all this; you cannot be really meaning to
help me home when you bid me do such a dreadful thing as put to sea on
a raft. Not even a well-found ship with a fair wind could venture on
such a distant voyage: nothing that you can say or do shall mage me go
on board a raft unless you first solemnly swear that you mean me no
mischief."
Calypso smiled at this and caressed him with her hand: "You know a
great deal," said she, "but you are quite wrong here. May heaven above
and earth below be my witnesses, with the waters of the river Styx-
and this is the most solemn oath which a blessed god can take- that
I mean you no sort of harm, and am only advising you to do exactly
what I should do myself in your place. I am dealing with you quite
straightforwardly; my heart is not made of iron, and I am very sorry
for you."
When she had thus spoken she led the way rapidly before him, and
Ulysses followed in her steps; so the pair, goddess and man, went on
and on till they came to Calypso's cave, where Ulysses took the seat
that Mercury had just left. Calypso set meat and drink before him of
the food that mortals eat; but her maids brought ambrosia and nectar
for herself, and they laid their hands on the good things that were
before them. When they had satisfied themselves with meat and drink,
Calypso spoke, saying:
"Ulysses, noble son of Laertes, so you would start home to your
own land at once? Good luck go with you, but if you could only know
how much suffering is in store for you before you get back to your own
country, you would stay where you are, keep house along with me, and
let me make you immortal, no matter how anxious you may be to see this
wife of yours, of whom you are thinking all the time day after day;
yet I flatter myself that at am no whit less tall or well-looking than
she is, for it is not to be expected that a mortal woman should
compare in beauty with an immortal."
"Goddess," replied Ulysses, "do not be angry with me about this. I
am quite aware that my wife Penelope is nothing like so tall or so
beautiful as yourself. She is only a woman, whereas you are an
immortal. Nevertheless, I want to get home, and can think of nothing
else. If some god wrecks me when I am on the sea, I will bear it and
make the best of it. I have had infinite trouble both by land and
sea already, so let this go with the rest."
Presently the sun set and it became dark, whereon the pair retired
into the inner part of the cave and went to bed.
When the child of morning, rosy-fingered Dawn, appeared, Ulysses put
on his shirt and cloak, while the goddess wore a dress of a light
gossamer fabric, very fine and graceful, with a beautiful golden
girdle about her waist and a veil to cover her head. She at once set
herself to think how she could speed Ulysses on his way. {samcis} So she gave
him a great bronze axe that suited his hands; it was sharpened on both
sides, and had a beautiful olive-wood handle fitted firmly on to it.
She also gave him a sharp adze, and then led the way to the far end of
the island where the largest trees grew- alder, poplar and pine,
that reached the sky- very dry and well seasoned, so as to sail
light for him in the water. Then, when she had shown him where the
best trees grew, Calypso went home, leaving him to cut them, which
he soon finished doing. He cut down twenty trees in all and adzed them
smooth, squaring them by rule in good workmanlike fashion. Meanwhile
Calypso came back with some augers, so he bored holes with them and
fitted the timbers together with bolts and rivets. He made the raft as
broad as a skilled shipwright makes the beam of a large vessel, and he
filed a deck on top of the ribs, and ran a gunwale all round it. He
also made a mast with a yard arm, and a rudder to steer with. He
fenced the raft all round with wicker hurdles as a protection
against the waves, and then he threw on a quantity of wood. By and
by Calypso brought him some linen to make the sails, and he made these
too, excellently, making them fast with braces and sheets. Last of
all, with the help of levers, he drew the raft down into the water.
In four days he had completed the whole work, and on the fifth
Calypso sent him from the island after washing him and giving him some
clean clothes. She gave him a goat skin full of black wine, and
another larger one of water; she also gave him a wallet full of
provisions, and found him in much good meat. Moreover, she made the
wind fair and warm for him, and gladly did Ulysses spread his sail
before it, while he sat and guided the raft skilfully by means of
the rudder. He never closed his eyes, but kept them fixed on the
Pleiads, on late-setting Bootes, and on the Bear- which men also
call the wain, and which turns round and round where it is, facing
Orion, and alone never dipping into the stream of Oceanus- for Calypso
had told him to keep this to his left. Days seven and ten did he
sail over the sea, and on the eighteenth the dim outlines of the
mountains on the nearest part of the Phaeacian coast appeared,
rising like a shield on the horizon.
But King Neptune, who was returning from the Ethiopians, caught
sight of Ulysses a long way off, from the mountains of the Solymi.
He could see him sailing upon the sea, and it made him very angry,
so he wagged his head and muttered to himself, saying, heavens, so the
gods have been changing their minds about Ulysses while I was away
in Ethiopia, and now he is close to the land of the Phaeacians,
where it is decreed that he shall escape from the calamities that have
befallen him. Still, he shall have plenty of hardship yet before he
has done with it."
