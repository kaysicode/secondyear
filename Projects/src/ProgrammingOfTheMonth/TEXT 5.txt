When they got to the ship they found the crew waiting by the water
side, and Telemachus said, "Now my men, help me to get the stores on
board; they are all put together in the cloister, and my mother does
not know anything about it, nor any of the maid servants except one."
With these words he led the way and the others followed after.
When they had brought the things as he told them, Telemachus went on
board, Minerva going before him and taking her seat in the stern of
the vessel, while Telemachus sat beside her. Then the men loosed the
hawsers and took their places on the benches. Minerva sent them a fair
wind from the West, that whistled over the deep blue waves whereon
Telemachus told them to catch hold of the ropes and hoist sail, and
they did as he told them. They set the mast in its socket in the cross
plank, raised it, and made it fast with the forestays; then they
hoisted their white sails aloft with ropes of twisted ox hide. As
the sail bellied out with the wind, the ship flew through the deep
blue water, and the foam hissed against her bows as she sped onward.
Then they made all fast throughout the ship, filled the mixing-bowls
to the brim, and made drink offerings to the immortal gods that are
from everlasting, but more particularly to the grey-eyed daughter of
Jove.
Thus, then, the ship sped on her way through the watches of the
night from dark till dawn.
BOOK III

But as the sun was rising from the fair sea into the firmament of
heaven to shed Blight on mortals and immortals, they reached Pylos the
city of Neleus. Now the people of Pylos were gathered on the sea shore
to offer sacrifice of black bulls to Neptune lord of the Earthquake.
There were nine guilds with five hundred men in each, and there were
nine bulls to each guild. As they were eating the inward meats and
burning the thigh bones [on the embers] in the name of Neptune,
Telemachus and his crew arrived, furled their sails, brought their
ship to anchor, and went ashore.
Minerva led the way and Telemachus followed her. Presently she said,
"Telemachus, you must not be in the least shy or nervous; you have
taken this voyage to try and find out where your father is buried
and how he came by his end; so go straight up to Nestor that we may
see what he has got to tell us. Beg of him to speak the truth, and
he will tell no lies, for he is an excellent person."
"But how, Mentor," replied Telemachus, "dare I go up to Nestor,
and how am I to address him? I have never yet been used to holding
long conversations with people, and am ashamed to begin questioning
one who is so much older than myself."
"Some things, Telemachus," answered Minerva, "will be suggested to
you by your own instinct, and heaven will prompt you further; for I am
assured that the gods have been with you from the time of your birth
until now."
She then went quickly on, and Telemachus followed in her steps
till they reached the place where the guilds of the Pylian people were
assembled. There they found Nestor sitting with his sons, while his
company round him were busy getting dinner ready, and putting pieces
of meat on to the spits while other pieces were cooking. When they saw
the strangers they crowded round them, took them by the hand and
bade them take their places. Nestor's son Pisistratus at once
offered his hand to each of them, and seated them on some soft
sheepskins that were lying on the sands near his father and his
brother Thrasymedes. Then he gave them their portions of the inward
meats and poured wine for them into a golden cup, handing it to
Minerva first, and saluting her at the same time.
"Offer a prayer, sir," said he, "to King Neptune, for it is his
feast that you are joining; when you have duly prayed and made your
drink-offering, pass the cup to your friend that he may do so also.
I doubt not that he too lifts his hands in prayer, for man cannot live
without God in the world. Still he is younger than you are, and is
much of an age with myself, so I he handed I will give you the
precedence."
As he spoke he handed her the cup. Minerva thought it very right and
proper of him to have given it to herself first; she accordingly began
praying heartily to Neptune. "O thou," she cried, "that encirclest the
earth, vouchsafe to grant the prayers of thy servants that call upon
thee. More especially we pray thee send down thy grace on Nestor and
on his sons; thereafter also make the rest of the Pylian people some
handsome return for the goodly hecatomb they are offering you. Lastly,
grant Telemachus and myself a happy issue, in respect of the matter
that has brought us in our to Pylos."
When she had thus made an end of praying, she handed the cup to
Telemachus and he prayed likewise. By and by, when the outer meats
were roasted and had been taken off the spits, the carvers gave
every man his portion and they all made an excellent dinner. As soon
as they had had enough to eat and drink, Nestor, knight of Gerene,
began to speak.
"Now," said he, "that our guests have done their dinner, it will
be best to ask them who they are. Who, then, sir strangers, are you,
and from what port have you sailed? Are you traders? or do you sail
the seas as rovers with your hand against every man, and every man's
hand against you?"
Telemachus answered boldly, for Minerva had given him courage to ask
about his father and get himself a good name.
"Nestor," said he, "son of Neleus, honour to the Achaean name, you
ask whence we come, and I will tell you. We come from Ithaca under
Neritum, and the matter about which I would speak is of private not
public import. I seek news of my unhappy father Ulysses, who is said
to have sacked the town of Troy in company with yourself. We know what
fate befell each one of the other heroes who fought at Troy, but as
regards Ulysses heaven has hidden from us the knowledge even that he
is dead at all, for no one can certify us in what place he perished,
nor say whether he fell in battle on the mainland, or was lost at
sea amid the waves of Amphitrite. Therefore I am suppliant at your
knees, if haply you may be pleased to tell me of his melancholy end,
whether you saw it with your own eyes, or heard it from some other
traveller, for he was a man born to trouble. Do not soften things
out of any pity for me, but tell me in all plainness exactly what
you saw. If my brave father Ulysses ever did you loyal service, either
by word or deed, when you Achaeans were harassed among the Trojans,
bear it in mind now as in my favour and tell me truly all."
"My friend," answered Nestor, "you recall a time of much sorrow to
my mind, for the brave Achaeans suffered much both at sea, while
privateering under Achilles, and when fighting before the great city
of king Priam. Our best men all of them fell there- Ajax, Achilles,
Patroclus peer of gods in counsel, and my own dear son Antilochus, a
man singularly fleet of foot and in fight valiant. But we suffered
much more than this; what mortal tongue indeed could tell the whole
story? Though you were to stay here and question me for five years, or
even six, I could not tell you all that the Achaeans suffered, and you
would turn homeward weary of my tale before it ended. Nine long
years did we try every kind of stratagem, but the hand of heaven was
against us; during all this time there was no one who could compare
with your father in subtlety- if indeed you are his son- I can
hardly believe my eyes- and you talk just like him too- no one would
say that people of such different ages could speak so much alike. He
and I never had any kind of difference from first to last neither in
camp nor council, but in singleness of heart and purpose we advised
the Argives how all might be ordered for the best.
"When however, we had sacked the city of Priam, and were setting
sail in our ships as heaven had dispersed us, then Jove saw fit to vex
the Argives on their homeward voyage; for they had Not all been either
wise or understanding, and hence many came to a bad end through the
displeasure of Jove's daughter Minerva, who brought about a quarrel
between the two sons of Atreus.
"The sons of Atreus called a meeting which was not as it should
be, for it was sunset and the Achaeans were heavy with wine. When they
explained why they had called- the people together, it seemed that
Menelaus was for sailing homeward at once, and this displeased
Agamemnon, who thought that we should wait till we had offered
hecatombs to appease the anger of Minerva. Fool that he was, he
might have known that he would not prevail with her, for when the gods
have made up their minds they do not change them lightly. So the two
stood bandying hard words, whereon the Achaeans sprang to their feet
with a cry that rent the air, and were of two minds as to what they
should do.
"That night we rested and nursed our anger, for Jove was hatching
mischief against us. But in the morning some of us drew our ships into
the water and put our goods with our women on board, while the rest,
about half in number, stayed behind with Agamemnon. We- the other
half- embarked and sailed; and the ships went well, for heaven had
smoothed the sea. When we reached Tenedos we offered sacrifices to the
gods, for we were longing to get home; cruel Jove, however, did not
yet mean that we should do so, and raised a second quarrel in the
course of which some among us turned their ships back again, and
sailed away under Ulysses to make their peace with Agamemnon; but I,
and all the ships that were with me pressed forward, for I saw that
mischief was brewing. The son of Tydeus went on also with me, and
his crews with him. Later on Menelaus joined us at Lesbos, and found
us making up our minds about our course- for we did not know whether
to go outside Chios by the island of Psyra, keeping this to our
left, or inside Chios, over against the stormy headland of Mimas. So
we asked heaven for a sign, and were shown one to the effect that we
should be soonest out of danger if we headed our ships across the open
sea to Euboea. This we therefore did, and a fair wind sprang up
which gave us a quick passage during the night to Geraestus, where
we offered many sacrifices to Neptune for having helped us so far on
our way. Four days later Diomed and his men stationed their ships in
Argos, but I held on for Pylos, and the wind never fell light from the
day when heaven first made it fair for me.
"Therefore, my dear young friend, I returned without hearing
anything about the others. I know neither who got home safely nor
who were lost but, as in duty bound, I will give you without reserve
the reports that have reached me since I have been here in my own
house. They say the Myrmidons returned home safely under Achilles' son
Neoptolemus; so also did the valiant son of Poias, Philoctetes.
Idomeneus, again, lost no men at sea, and all his followers who
escaped death in the field got safe home with him to Crete. No
matter how far out of the world you live, you will have heard of
Agamemnon and the bad end he came to at the hands of Aegisthus- and
a fearful reckoning did Aegisthus presently pay. See what a good thing
it is for a man to leave a son behind him to do as Orestes did, who
killed false Aegisthus the murderer of his noble father. You too,
then- for you are a tall, smart-looking fellow- show your mettle and
make yourself a name in story."
"Nestor son of Neleus," answered Telemachus, "honour to the
Achaean name, the Achaeans applaud Orestes and his name will live
through all time for he has avenged his father nobly. Would that
heaven might grant me to do like vengeance on the insolence of the
wicked suitors, who are ill treating me and plotting my ruin; but
the gods have no such happiness in store for me and for my father,
so we must bear it as best we may."
"My friend," said Nestor, "now that you remind me, I remember to
have heard that your mother has many suitors, who are ill disposed
towards you and are making havoc of your estate. Do you submit to this
tamely, or are public feeling and the voice of heaven against you? Who
knows but what Ulysses may come back after all, and pay these
scoundrels in full, either single-handed or with a force of Achaeans
behind him? If Minerva were to take as great a liking to you as she
did to Ulysses when we were fighting before Troy (for I never yet
saw the gods so openly fond of any one as Minerva then was of your
father), if she would take as good care of you as she did of him,
these wooers would soon some of them him, forget their wooing."
Telemachus answered, "I can expect nothing of the kind; it would
be far too much to hope for. I dare not let myself think of it. Even
though the gods themselves willed it no such good fortune could befall
me."
On this Minerva said, "Telemachus, what are you talking about?
Heaven has a long arm if it is minded to save a man; and if it were
me, I should not care how much I suffered before getting home,
provided I could be safe when I was once there. I would rather this,
than get home quickly, and then be killed in my own house as Agamemnon
was by the treachery of Aegisthus and his wife. Still, death is
certain, and when a man's hour is come, not even the gods can save
him, no matter how fond they are of him."
"Mentor," answered Telemachus, "do not let us talk about it any
more. There is no chance of my father's ever coming back; the gods
have long since counselled his destruction. There is something else,
however, about which I should like to ask Nestor, for he knows much
more than any one else does. They say he has reigned for three
generations so that it is like talking to an immortal. Tell me,
therefore, Nestor, and tell me true; how did Agamemnon come to die
in that way? What was Menelaus doing? And how came false Aegisthus
to kill so far better a man than himself? Was Menelaus away from
Achaean Argos, voyaging elsewhither among mankind, that Aegisthus took
heart and killed Agamemnon?"
"I will tell you truly," answered Nestor, "and indeed you have
yourself divined how it all happened. If Menelaus when he got back
from Troy had found Aegisthus still alive in his house, there would
have been no barrow heaped up for him, not even when he was dead,
but he would have been thrown outside the city to dogs and vultures,
and not a woman would have mourned him, for he had done a deed of
great wickedness; but we were over there, fighting hard at Troy, and
Aegisthus who was taking his ease quietly in the heart of Argos,
cajoled Agamemnon's wife Clytemnestra with incessant flattery.
"At first she would have nothing to do with his wicked scheme, for
she was of a good natural disposition; moreover there was a bard
with her, to whom Agamemnon had given strict orders on setting out for
Troy, that he was to keep guard over his wife; but when heaven had
counselled her destruction, Aegisthus thus this bard off to a desert
island and left him there for crows and seagulls to batten upon- after
which she went willingly enough to the house of Aegisthus. Then he
offered many burnt sacrifices to the gods, and decorated many
temples with tapestries and gilding, for he had succeeded far beyond
his expectations.
"Meanwhile Menelaus and I were on our way home from Troy, on good
terms with one another. When we got to Sunium, which is the point of
Athens, Apollo with his painless shafts killed Phrontis the
steersman of Menelaus' ship (and never man knew better how to handle a
vessel in rough weather) so that he died then and there with the
helm in his hand, and Menelaus, though very anxious to press
forward, had to wait in order to bury his comrade and give him his due
funeral rites. Presently, when he too could put to sea again, and
had sailed on as far as the Malean heads, Jove counselled evil against
him and made it it blow hard till the waves ran mountains high. Here
he divided his fleet and took the one half towards Crete where the
Cydonians dwell round about the waters of the river Iardanus. There is
a high headland hereabouts stretching out into the sea from a place
called Gortyn, and all along this part of the coast as far as Phaestus
the sea runs high when there is a south wind blowing, but arter
Phaestus the coast is more protected, for a small headland can make
a great shelter. Here this part of the fleet was driven on to the
rocks and wrecked; but the crews just managed to save themselves. As
for the other five ships, they were taken by winds and seas to
Egypt, where Menelaus gathered much gold and substance among people of
an alien speech. Meanwhile Aegisthus here at home plotted his evil
deed. For seven years after he had killed Agamemnon he ruled in
Mycene, and the people were obedient under him, but in the eighth year
Orestes came back from Athens to be his bane, and killed the
murderer of his father. Then he celebrated the funeral rites of his
mother and of false Aegisthus by a banquet to the people of Argos, and
on that very day Menelaus came home, with as much treasure as his
ships could carry.
"Take my advice then, and do not go travelling about for long so far
from home, nor leave your property with such dangerous people in
your house; they will eat up everything you have among them, and you
will have been on a fool's errand. Still, I should advise you by all
means to go and visit Menelaus, who has lately come off a voyage among
such distant peoples as no man could ever hope to get back from,
when the winds had once carried him so far out of his reckoning;
even birds cannot fly the distance in a twelvemonth, so vast and
terrible are the seas that they must cross. Go to him, therefore, by
sea, and take your own men with you; or if you would rather travel
by land you can have a chariot, you can have horses, and here are my
sons who can escort you to Lacedaemon where Menelaus lives. Beg of him
to speak the truth, and he will tell you no lies, for he is an
excellent person."
As he spoke the sun set and it came on dark, whereon Minerva said,
"Sir, all that you have said is well; now, however, order the
tongues of the victims to be cut, and mix wine that we may make
drink-offerings to Neptune, and the other immortals, and then go to
bed, for it is bed time. People should go away early and not keep late
hours at a religious festival."
Thus spoke the daughter of Jove, and they obeyed her saying. Men
servants poured water over the hands of the guests, while pages filled
the mixing-bowls with wine and water, and handed it round after giving
every man his drink-offering; then they threw the tongues of the
victims into the fire, and stood up to make their drink-offerings.
When they had made their offerings and had drunk each as much as he
was minded, Minerva and Telemachus were forgoing on board their
ship, but Nestor caught them up at once and stayed them.
"Heaven and the immortal gods," he exclaimed, "forbid that you
should leave my house to go on board of a ship. Do you think I am so
poor and short of clothes, or that I have so few cloaks and as to be
unable to find comfortable beds both for myself and for my guests? Let
me tell you I have store both of rugs and cloaks, and shall not permit
the son of my old friend Ulysses to camp down on the deck of a ship-
not while I live- nor yet will my sons after me, but they will keep
open house as have done."
Then Minerva answered, "Sir, you have spoken well, and it will be
much better that Telemachus should do as you have said; he, therefore,
shall return with you and sleep at your house, but I must go back to
give orders to my crew, and keep them in good heart. I am the only
older person among them; the rest are all young men of Telemachus' own
age, who have taken this voyage out of friendship; so I must return to
the ship and sleep there. Moreover to-morrow I must go to the
Cauconians where I have a large sum of money long owing to me. As
for Telemachus, now that he is your guest, send him to Lacedaemon in a
chariot, and let one of your sons go with him. Be pleased also to
provide him with your best and fleetest horses."
When she had thus spoken, she flew away in the form of an eagle, and
all marvelled as they beheld it. Nestor was astonished, and took
Telemachus by the hand. "My friend," said he, "I see that you are
going to be a great hero some day, since the gods wait upon you thus
while you are still so young. This can have been none other of those
who dwell in heaven than Jove's redoubtable daughter, the
Trito-born, who showed such favour towards your brave father among the
Argives." "Holy queen," he continued, "vouchsafe to send down thy
grace upon myself, my good wife, and my children. In return, I will
offer you in sacrifice a broad-browed heifer of a year old,
unbroken, and never yet brought by man under the yoke. I will gild her
horns, and will offer her up to you in sacrifice."
Thus did he pray, and Minerva heard his prayer. He then led the
way to his own house, followed by his sons and sons-in-law. When
they had got there and had taken their places on the benches and
seats, he mixed them a bowl of sweet wine that was eleven years old
when the housekeeper took the lid off the jar that held it. As he
mixed the wine, he prayed much and made drink-offerings to Minerva,
daughter of Aegis-bearing Jove. Then, when they had made their
drink-offerings and had drunk each as much as he was minded, the
others went home to bed each in his own abode; but Nestor put
Telemachus to sleep in the room that was over the gateway along with
Pisistratus, who was the only unmarried son now left him. As for
himself, he slept in an inner room of the house, with the queen his
wife by his side.
Now when the child of morning, rosy-fingered Dawn, appeared,
Nestor left his couch and took his seat on the benches of white and
polished marble that stood in front of his house. Here aforetime sat
Neleus, peer of gods in counsel, but he was now dead, and had gone
to the house of Hades; so Nestor sat in his seat, sceptre in hand,
as guardian of the public weal. His sons as they left their rooms
gathered round him, Echephron, Stratius, Perseus, Aretus, and
Thrasymedes; the sixth son was Pisistratus, and when Telemachus joined
them they made him sit with them. Nestor then addressed them.
"My sons," said he, "make haste to do as I shall bid you. I wish
first and foremost to propitiate the great goddess Minerva, who
manifested herself visibly to me during yesterday's festivities. Go,
then, one or other of you to the plain, tell the stockman to look me
out a heifer, and come on here with it at once. Another must go to
Telemachus's ship, and invite all the crew, leaving two men only in
charge of the vessel. Some one else will run and fetch Laerceus the
goldsmith to gild the horns of the heifer. The rest, stay all of you
where you are; tell the maids in the house to prepare an excellent
dinner, and to fetch seats, and logs of wood for a burnt offering.
Tell them also- to bring me some clear spring water."
On this they hurried off on their several errands. The heifer was
brought in from the plain, and Telemachus's crew came from the ship;
the goldsmith brought the anvil, hammer, and tongs, with which he
worked his gold, and Minerva herself came to the sacrifice. Nestor
gave out the gold, and the smith gilded the horns of the heifer that
the goddess might have pleasure in their beauty. Then Stratius and
Echephron brought her in by the horns; Aretus fetched water from the
house in a ewer that had a flower pattern on it, and in his other hand
he held a basket of barley meal; sturdy Thrasymedes stood by with a
sharp axe, ready to strike the heifer, while Perseus held a bucket.
Then Nestor began with washing his hands and sprinkling the barley
meal, and he offered many a prayer to Minerva as he threw a lock
from the heifer's head upon the fire.
When they had done praying and sprinkling the barley meal
Thrasymedes dealt his blow, and brought the heifer down with a
stroke that cut through the tendons at the base of her neck, whereon
the daughters and daughters-in-law of Nestor, and his venerable wife
Eurydice (she was eldest daughter to Clymenus) screamed with
delight. Then they lifted the heifer's head from off the ground, and
Pisistratus cut her throat. When she had done bleeding and was quite
dead, they cut her up. They cut out the thigh bones all in due course,
wrapped them round in two layers of fat, and set some pieces of raw
meat on the top of them; then Nestor laid them upon the wood fire
and poured wine over them, while the young men stood near him with
five-pronged spits in their hands. When the thighs were burned and
they had tasted the inward meats, they cut the rest of the meat up
small, put the pieces on the spits and toasted them over the fire.
Meanwhile lovely Polycaste, Nestor's youngest daughter, washed
Telemachus. When she had washed him and anointed him with oil, she
brought him a fair mantle and shirt, and he looked like a god as he
came from the bath and took his seat by the side of Nestor. When the
outer meats were done they drew them off the spits and sat down to
dinner where they were waited upon by some worthy henchmen, who kept
pouring them out their wine in cups of gold. As soon as they had had
had enough to eat and drink Nestor said, "Sons, put Telemachus's
horses to the chariot that he may start at once."
Thus did he speak, and they did even as he had said, and yoked the
fleet horses to the chariot. The housekeeper packed them up a
provision of bread, wine, and sweetmeats fit for the sons of
princes. Then Telemachus got into the chariot, while Pisistratus
gathered up the reins and took his seat beside him. He lashed the
horses on and they flew forward nothing loth into the open country,
leaving the high citadel of Pylos behind them. All that day did they
travel, swaying the yoke upon their necks till the sun went down and
darkness was over all the land. Then they reached Pherae where Diocles
lived, who was son to Ortilochus and grandson to Alpheus. Here they
passed the night and Diocles entertained them hospitably. When the
child of morning, rosy-fingered Dawn; appeared, they again yoked their
horses and drove out through the gateway under the echoing
gatehouse. Pisistratus lashed the horses on and they flew forward
nothing loth; presently they came to the corn lands Of the open
country, and in the course of time completed their journey, so well
did their steeds take them.
Now when the sun had set and darkness was over the land,
BOOK IV

They reached the low lying city of Lacedaemon them where they
drove straight to the of abode Menelaus [and found him in his own
house, feasting with his many clansmen in honour of the wedding of his
son, and also of his daughter, whom he was marrying to the son of that
valiant warrior Achilles. He had given his consent and promised her to
him while he was still at Troy, and now the gods were bringing the
marriage about; so he was sending her with chariots and horses to
the city of the Myrmidons over whom Achilles' son was reigning. For
his only son he had found a bride from Sparta, daughter of Alector.
This son, Megapenthes, was born to him of a bondwoman, for heaven
vouchsafed Helen no more children after she had borne Hermione, who
was fair as golden Venus herself.
So the neighbours and kinsmen of Menelaus were feasting and making
merry in his house. There was a bard also to sing to them and play his
lyre, while two tumblers went about performing in the midst of them
when the man struck up with his tune.]
Telemachus and the son of Nestor stayed their horses at the gate,
whereon Eteoneus servant to Menelaus came out, and as soon as he saw
them ran hurrying back into the house to tell his Master. He went
close up to him and said, "Menelaus, there are some strangers come
here, two men, who look like sons of Jove. What are we to do? Shall we
take their horses out, or tell them to find friends elsewhere as
they best can?"
Menelaus was very angry and said, "Eteoneus, son of Boethous, you
never used to be a fool, but now you talk like a simpleton. Take their
horses out, of course, and show the strangers in that they may have
supper; you and I have stayed often enough at other people's houses
before we got back here, where heaven grant that we may rest in
peace henceforward."
So Eteoneus bustled back and bade other servants come with him. They
took their sweating hands from under the yoke, made them fast to the
mangers, and gave them a feed of oats and barley mixed. Then they
leaned the chariot against the end wall of the courtyard, and led
the way into the house. Telemachus and Pisistratus were astonished
when they saw it, for its splendour was as that of the sun and moon;
then, when they had admired everything to their heart's content,
they went into the bath room and washed themselves.
When the servants had washed them and anointed them with oil, they
brought them woollen cloaks and shirts, and the two took their seats
by the side of Menelaus. A maidservant brought them water in a
beautiful golden ewer, and poured it into a silver basin for them to
wash their hands; and she drew a clean table beside them. An upper
servant brought them bread, and offered them many good things of
what there was in the house, while the carver fetched them plates of
all manner of meats and set cups of gold by their side.
Menelaus then greeted them saying, "Fall to, and welcome; when you
have done supper I shall ask who you are, for the lineage of such
men as you cannot have been lost. You must be descended from a line of
sceptre-bearing kings, for poor people do not have such sons as you
are."
On this he handed them a piece of fat roast loin, which had been set
near him as being a prime part, and they laid their hands on the
good things that were before them; as soon as they had had enough to
eat and drink, Telemachus said to the son of Nestor, with his head
so close that no one might hear, "Look, Pisistratus, man after my
own heart, see the gleam of bronze and gold- of amber, ivory, and
silver. Everything is so splendid that it is like seeing the palace of
Olympian Jove. I am lost in admiration."
Menelaus overheard him and said, "No one, my sons, can hold his
own with Jove, for his house and everything about him is immortal; but
among mortal men- well, there may be another who has as much wealth as
I have, or there may not; but at all events I have travelled much
and have undergone much hardship, for it was nearly eight years before
I could get home with my fleet. I went to Cyprus, Phoenicia and the
Egyptians; I went also to the Ethiopians, the Sidonians, and the
Erembians, and to Libya where the lambs have horns as soon as they are
born, and the sheep lamb down three times a year. Every one in that
country, whether master or man, has plenty of cheese, meat, and good
milk, for the ewes yield all the year round. But while I was
travelling and getting great riches among these people, my brother was
secretly and shockingly murdered through the perfidy of his wicked
wife, so that I have no pleasure in being lord of all this wealth.
Whoever your parents may be they must have told you about all this,
and of my heavy loss in the ruin of a stately mansion fully and
magnificently furnished. Would that I had only a third of what I now
have so that I had stayed at home, and all those were living who
perished on the plain of Troy, far from Argos. I of grieve, as I sit
here in my house, for one and all of them. At times I cry aloud for
sorrow, but presently I leave off again, for crying is cold comfort
and one soon tires of it. Yet grieve for these as I may, I do so for
one man more than for them all. I cannot even think of him without
loathing both food and sleep, so miserable does he make me, for no one
of all the Achaeans worked so hard or risked so much as he did. He
took nothing by it, and has left a legacy of sorrow to myself, for
he has been gone a long time, and we know not whether he is alive or
dead. His old father, his long-suffering wife Penelope, and his son
Telemachus, whom he left behind him an infant in arms, are plunged
in grief on his account."
Thus spoke Menelaus, and the heart of Telemachus yearned as he
bethought him of his father. Tears fell from his eyes as he heard
him thus mentioned, so that he held his cloak before his face with
both hands. When Menelaus saw this he doubted whether to let him
choose his own time for speaking, or to ask him at once and find
what it was all about.
While he was thus in two minds Helen came down from her high vaulted
and perfumed room, looking as lovely as Diana herself. Adraste brought
her a seat, Alcippe a soft woollen rug while Phylo fetched her the
silver work-box which Alcandra wife of Polybus had given her.
Polybus lived in Egyptian Thebes, which is the richest city in the
whole world; he gave Menelaus two baths, both of pure silver, two
tripods, and ten talents of gold; besides all this, his wife gave
Helen some beautiful presents, to wit, a golden distaff, and a
silver work-box that ran on wheels, with a gold band round the top
of it. Phylo now placed this by her side, full of fine spun yarn,
and a distaff charged with violet coloured wool was laid upon the
top of it. Then Helen took her seat, put her feet upon the
footstool, and began to question her husband.
"Do we know, Menelaus," said she, "the names of these strangers
who have come to visit us? Shall I guess right or wrong?-but I
cannot help saying what I think. Never yet have I seen either man or
woman so like somebody else (indeed when I look at him I hardly know
what to think) as this young man is like Telemachus, whom Ulysses left
as a baby behind him, when you Achaeans went to Troy with battle in
your hearts, on account of my most shameless self."
"My dear wife," replied Menelaus, "I see the likeness just as you
do. His hands and feet are just like Ulysses'; so is his hair, with
the shape of his head and the expression of his eyes. Moreover, when I
was talking about Ulysses, and saying how much he had suffered on my
account, tears fell from his eyes, and he hid his face in his mantle."
Then Pisistratus said, "Menelaus, son of Atreus, you are right in
thinking that this young man is Telemachus, but he is very modest, and
is ashamed to come here and begin opening up discourse with one
whose conversation is so divinely interesting as your own. My
father, Nestor, sent me to escort him hither, for he wanted to know
whether you could give him any counsel or suggestion. A son has always
trouble at home when his father has gone away leaving him without
supporters; and this is how Telemachus is now placed, for his father
is absent, and there is no one among his own people to stand by him."
"Bless my heart," replied Menelaus, "then I am receiving a visit
from the son of a very dear friend, who suffered much hardship for
my sake. I had always hoped to entertain him with most marked
distinction when heaven had granted us a safe return from beyond the
seas. I should have founded a city for him in Argos, and built him a
house. I should have made him leave Ithaca with his goods, his son,
and all his people, and should have sacked for them some one of the
neighbouring cities that are subject to me. We should thus have seen
one another continually, and nothing but death could have
interrupted so close and happy an intercourse. I suppose, however,
that heaven grudged us such great good fortune, for it has prevented
the poor fellow from ever getting home at all."
Thus did he speak, and his words set them all a weeping. Helen wept,
Telemachus wept, and so did Menelaus, nor could Pisistratus keep his
eyes from filling, when he remembered his dear brother Antilochus whom
the son of bright Dawn had killed. Thereon he said to Menelaus,
"Sir, my father Nestor, when we used to talk about you at home, told
me you were a person of rare and excellent understanding. If, then, it
be possible, do as I would urge you. I am not fond of crying while I
am getting my supper. Morning will come in due course, and in the
forenoon I care not how much I cry for those that are dead and gone.
This is all we can do for the poor things. We can only shave our heads
for them and wring the tears from our cheeks. I had a brother who died
at Troy; he was by no means the worst man there; you are sure to
have known him- his name was Antilochus; I never set eyes upon him
myself, but they say that he was singularly fleet of foot and in fight
valiant."
"Your discretion, my friend," answered Menelaus, "is beyond your
years. It is plain you take after your father. One can soon see when a
man is son to one whom heaven has blessed both as regards wife and
offspring- and it has blessed Nestor from first to last all his
days, giving him a green old age in his own house, with sons about him
who are both we disposed and valiant. We will put an end therefore
to all this weeping, and attend to our supper again. Let water be
poured over our hands. Telemachus and I can talk with one another
fully in the morning."
On this Asphalion, one of the servants, poured water over their
hands and they laid their hands on the good things that were before
them.
Then Jove's daughter Helen bethought her of another matter. She
drugged the wine with an herb that banishes all care, sorrow, and
ill humour. Whoever drinks wine thus drugged cannot shed a single tear
all the rest of the day, not even though his father and mother both of
them drop down dead, or he sees a brother or a son hewn in pieces
before his very eyes. This drug, of such sovereign power and virtue,
had been given to Helen by Polydamna wife of Thon, a woman of Egypt,
where there grow all sorts of herbs, some good to put into the
mixing-bowl and others poisonous. Moreover, every one in the whole
country is a skilled physician, for they are of the race of Paeeon.
When Helen had put this drug in the bowl, and had told the servants to
serve the wine round, she said:
"Menelaus, son of Atreus, and you my good friends, sons of
honourable men (which is as Jove wills, for he is the giver both of
good and evil, and can do what he chooses), feast here as you will,
and listen while I tell you a tale in season. I cannot indeed name
every single one of the exploits of Ulysses, but I can say what he did
when he was before Troy, and you Achaeans were in all sorts of
difficulties. He covered himself with wounds and bruises, dressed
himself all in rags, and entered the enemy's city looking like a
menial or a beggar. and quite different from what he did when he was
among his own people. In this disguise he entered the city of Troy,
and no one said anything to him. I alone recognized him and began to
question him, but he was too cunning for me. When, however, I had
washed and anointed him and had given him clothes, and after I had
sworn a solemn oath not to betray him to the Trojans till he had got
safely back to his own camp and to the ships, he told me all that
the Achaeans meant to do. He killed many Trojans and got much
information before he reached the Argive camp, for all which things
the Trojan women made lamentation, but for my own part I was glad, for
my heart was beginning to oam after my home, and I was unhappy about
wrong that Venus had done me in taking me over there, away from my
country, my girl, and my lawful wedded husband, who is indeed by no
means deficient either in person or understanding."
Then Menelaus said, "All that you have been saying, my dear wife, is
true. I have travelled much, and have had much to do with heroes,
but I have never seen such another man as Ulysses. What endurance too,
and what courage he displayed within the wooden horse, wherein all the
bravest of the Argives were lying in wait to bring death and
destruction upon the Trojans. At that moment you came up to us; some
god who wished well to the Trojans must have set you on to it and
you had Deiphobus with you. Three times did you go all round our
hiding place and pat it; you called our chiefs each by his own name,
and mimicked all our wives -Diomed, Ulysses, and I from our seats
inside heard what a noise you made. Diomed and I could not make up our
minds whether to spring out then and there, or to answer you from
inside, but Ulysses held us all in check, so we sat quite still, all
except Anticlus, who was beginning to answer you, when Ulysses clapped
his two brawny hands over his mouth, and kept them there. It was
this that saved us all, for he muzzled Anticlus till Minerva took
you away again."
"How sad," exclaimed Telemachus, "that all this was of no avail to
save him, nor yet his own iron courage. But now, sir, be pleased to
send us all to bed, that we may lie down and enjoy the blessed boon of
sleep."
On this Helen told the maid servants to set beds in the room that
was in the gatehouse, and to make them with good red rugs, and
spread coverlets on the top of them with woollen cloaks for the guests
to wear. So the maids went out, carrying a torch, and made the beds,
to which a man-servant presently conducted the strangers. Thus,
then, did Telemachus and Pisistratus sleep there in the forecourt,
while the son of Atreus lay in an inner room with lovely Helen by
his side.
When the child of morning, rosy-fingered Dawn, appeared, Menelaus
rose and dressed himself. He bound his sandals on to his comely
feet, girded his sword about his shoulders, and left his room
looking like an immortal god. Then, taking a seat near Telemachus he
said:
